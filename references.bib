
@article{stava_interactive_2008,
	title = {Interactive terrain modeling using hydraulic erosion},
	abstract = {We present a step toward interactive physics-based modeling of terrains. A terrain, composed of layers of materials, is edited with interactive modeling tools built upon different physics-based erosion and deposition algorithms. First, two hydraulic erosion algorithms for running water are coupled. Areas where the motion is slow become more eroded by the dissolution erosion, whereas in the areas with faster motion, the force-based erosion prevails. Second, when the water under-erodes certain areas, slippage takes effect and the river banks fall into the water. A variety of local and global editing operation is provided. The user has a great level of control over the process and receives immediate feedback since the GPU-based erosion simulation runs at least at 20 fps on off-the-shelf computers for scenes with grid resolution of 2048 × 1024 and four layers of material. We also present a divide and conquer approach to handle large terrain erosion, where the terrain is tiled, and each tile calculated independently on the GPU. We show a wide variety of erosion-based modeling features such as forming rivers, drying ﬂooded areas, rain, interactive manipulation with rivers, spring, adding obstacles into the water, etc.},
	language = {en},
	author = {Štava, Ondrej and Beneš, Bedrich and Brisbin, Matthew and Krivánek, Jaroslav},
	year = {2008},
}

@article{sala_mathematics_2002,
	title = {Mathematics, {Territory} and {Landscape}},
	abstract = {The year 2002 has been dedicated to the Mountains by United Nations Organization. The aim of this paper is to present some relationship between mathematics, territory and landscape. Territory is a geographic entity, which we can divide in two parts: political and natural. The environment (urban and extra urban) consists of biological and cultural evolution of the Territory. The landscape is an aesthetic concept strictly connected with the relation: Man and Nature. In this paper we will refer of our attempt to describe Natural territory in the extra-urban environment using a mathematics approach.},
	language = {en},
	author = {Sala, Nicoletta},
	year = {2002},
}

@inproceedings{togelius_search-based_2010,
	address = {Berlin, Heidelberg},
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {Search-{Based} {Procedural} {Content} {Generation}},
	isbn = {978-3-642-12239-2},
	doi = {10.1007/978-3-642-12239-2_15},
	abstract = {Recently, a small number of papers have appeared in which the authors implement stochastic search algorithms, such as evolutionary computation, to generate game content, such as levels, rules and weapons. We propose a taxonomy of such approaches, centring on what sort of content is generated, how the content is represented, and how the quality of the content is evaluated. The relation between search-based and other types of procedural content generation is described, as are some of the main research challenges in this new field. The paper ends with some successful examples of this approach.},
	language = {en},
	booktitle = {Applications of {Evolutionary} {Computation}},
	publisher = {Springer},
	author = {Togelius, Julian and Yannakakis, Georgios N. and Stanley, Kenneth O. and Browne, Cameron},
	editor = {Di Chio, Cecilia and Cagnoni, Stefano and Cotta, Carlos and Ebner, Marc and Ekárt, Anikó and Esparcia-Alcazar, Anna I. and Goh, Chi-Keong and Merelo, Juan J. and Neri, Ferrante and Preuß, Mike and Togelius, Julian and Yannakakis, Georgios N.},
	year = {2010},
	keywords = {Board Game, Game Design, Game Mechanic, Game Rule, Player Experience},
	pages = {141--150},
}

@article{togelius_search-based_2011,
	title = {Search-{Based} {Procedural} {Content} {Generation}: {A} {Taxonomy} and {Survey}},
	volume = {3},
	issn = {1943-068X, 1943-0698},
	shorttitle = {Search-{Based} {Procedural} {Content} {Generation}},
	url = {http://ieeexplore.ieee.org/document/5756645/},
	doi = {10.1109/TCIAIG.2011.2148116},
	abstract = {The focus of this survey is on research in applying evolutionary and other metaheuristic search algorithms to automatically generating content for games, both digital and nondigital (such as board games). The term search-based procedural content generation is proposed as the name for this emerging ﬁeld, which at present is growing quickly. A taxonomy for procedural content generation is devised, centering on what kind of content is generated, how the content is represented and how the quality/ﬁtness of the content is evaluated; search-based procedural content generation in particular is situated within this taxonomy. This article also contains a survey of all published papers known to the authors in which game content is generated through search or optimisation, and ends with an overview of important open research problems.},
	language = {en},
	number = {3},
	urldate = {2024-02-29},
	journal = {IEEE Transactions on Computational Intelligence and AI in Games},
	author = {Togelius, Julian and Yannakakis, Georgios N. and Stanley, Kenneth O. and Browne, Cameron},
	month = sep,
	year = {2011},
	pages = {172--186},
}

@inproceedings{vitacion_procedural_2019,
	address = {Pasadena, CA, USA},
	title = {Procedural {Generation} of {3D} {Planetary}-{Scale} {Terrains}},
	isbn = {978-1-72811-545-0},
	url = {https://ieeexplore.ieee.org/document/8863868/},
	doi = {10.1109/SMC-IT.2019.00014},
	abstract = {The creation of three-dimensional geographical surface has been a primary concern at the forefront of the fields of space mission simulation. This paper introduces how to apply procedural terrain generation techniques to the creation of 3D terrains for a spherical object. The paper first identifies algorithms that can be used to generate terrains on a spherical surface. Then, the paper compares computational complexity and scalability of using these algorithms in 3D planetary scale simulation. The paper uses a benchmarking program created in virtual reality (VR) to evaluate the performance of these algorithms in the simulation and imaging of planetary bodies in VR including execution time, quality and memory usage.},
	language = {en},
	urldate = {2024-02-29},
	booktitle = {2019 {IEEE} {International} {Conference} on {Space} {Mission} {Challenges} for {Information} {Technology} ({SMC}-{IT})},
	publisher = {IEEE},
	author = {Vitacion, Ryan J. and Liu, Li},
	month = jul,
	year = {2019},
	pages = {70--77},
}

@article{silva_procedural_2015,
	title = {Procedural {Content} {Graphs} for {Urban} {Modeling}},
	volume = {2015},
	issn = {1687-7047, 1687-7055},
	url = {http://www.hindawi.com/journals/ijcgt/2015/808904/},
	doi = {10.1155/2015/808904},
	abstract = {Massive procedural content creation, for example, for virtual urban environments, is a difficult, yet important challenge. While shape grammars are a popular example of effectiveness in architectural modeling, they have clear limitations regarding readability, manageability, and expressive power when addressing a variety of complex structural designs. Moreover, shape grammars aim at geometry specification and do not facilitate integration with other types of content, such as textures or light sources, which could rather accompany the generation process. We present procedural content graphs, a graph-based solution for procedural generation that addresses all these issues in a visual, flexible, and more expressive manner. Besides integrating handling of diverse types of content, this approach introduces collective entity manipulation as lists, seamlessly providing features such as advanced filtering, grouping, merging, ordering, and aggregation, essentially unavailable in shape grammars. Hereby, separated entities can be easily merged or just analyzed together in order to perform a variety of context-based decisions and operations. The advantages of this approach are illustrated via examples of tasks that are either very cumbersome or simply impossible to express with previous grammar approaches.},
	language = {en},
	urldate = {2024-02-29},
	journal = {International Journal of Computer Games Technology},
	author = {Silva, Pedro Brandão and Eisemann, Elmar and Bidarra, Rafael and Coelho, António},
	year = {2015},
	pages = {1--15},
}

@book{frade_evolution_2010,
	title = {Evolution of {Artificial} {Terrains} for {Video} {Games} {Based} on {Accessibility}},
	isbn = {978-3-642-12238-5},
	abstract = {Diverse methods have been developed to generate terrains under constraints to control terrain features, but most of them use
strict restrictions. However, there are situations were more flexible restrictions are sufficient, such as ensuring that terrains
have enough accessible area, which is an important trait for video games. The Genetic Terrain Program technique, based on
genetic programming, was used to automatically evolve Terrain Programs (TPs - which are able to generate terrains procedurally)
for the desired accessibility parameters. Results showed that the accessibility parameters have negligible influence on the
evolutionary system and that the terminal set has a major role on the terrain look. TPs produced this way are already being
used on Chapas video game.},
	author = {Frade, Miguel and Vega, Francisco and Cotta, Carlos},
	month = apr,
	year = {2010},
	doi = {10.1007/978-3-642-12239-2_10},
	note = {Pages: 99},
}

@article{van_der_linden_procedural_2014,
	title = {Procedural {Generation} of {Dungeons}},
	volume = {6},
	issn = {1943-068X, 1943-0698},
	url = {http://ieeexplore.ieee.org/document/6661386/},
	doi = {10.1109/TCIAIG.2013.2290371},
	abstract = {The use of procedural content generation (PCG) techniques in game development has been mostly restricted to very speciﬁc types of game elements. PCG has seldom been deployed for generating entire game levels, a notable exception to this being dungeons: a speciﬁc type of game level often encountered in adventure and role playing games. Due to their peculiar combination of pace, gameplay, and game spaces, dungeon levels are among the most suited to showcase the beneﬁts of PCG. This paper surveys research on procedural methods to generate dungeon game levels. We summarize common practices, discuss pros and cons of different approaches, and identify a few promising challenges ahead. In general, what current procedural dungeon generation methods are missing is not performance, but more powerful, accurate, and richer control over the generation process. Recent research results seem to indicate that gameplay-related criteria can provide this high-level control. However, this area is still in its infancy, and many research challenges still lie ahead, e.g., improving the intuitiveness and accessibility of such methods for designers. We also observe that more research is needed into generic mechanisms for automating the generation of the actual dungeon-geometric models. We conclude that the foundations for enabling gameplay-based control of dungeon-level generation are worth being researched, and that its promising results may be instrumental in bringing PCG into mainstream game development.},
	language = {en},
	number = {1},
	urldate = {2024-02-29},
	journal = {IEEE Transactions on Computational Intelligence and AI in Games},
	author = {Van Der Linden, Roland and Lopes, Ricardo and Bidarra, Rafael},
	month = mar,
	year = {2014},
	pages = {78--89},
}

@inproceedings{muller_procedural_2006,
	address = {Boston, Massachusetts},
	title = {Procedural modeling of buildings},
	isbn = {978-1-59593-364-5},
	url = {http://portal.acm.org/citation.cfm?doid=1179352.1141931},
	doi = {10.1145/1179352.1141931},
	language = {en},
	urldate = {2024-02-29},
	booktitle = {{ACM} {SIGGRAPH} 2006 {Papers} on   - {SIGGRAPH} '06},
	publisher = {ACM Press},
	author = {Müller, Pascal and Wonka, Peter and Haegler, Simon and Ulmer, Andreas and Van Gool, Luc},
	year = {2006},
	pages = {614},
}

@book{frade_evolution_2010-1,
	title = {Evolution of {Artificial} {Terrains} for {Video} {Games} {Based} on {Accessibility}},
	isbn = {978-3-642-12238-5},
	abstract = {Diverse methods have been developed to generate terrains under constraints to control terrain features, but most of them use
strict restrictions. However, there are situations were more flexible restrictions are sufficient, such as ensuring that terrains
have enough accessible area, which is an important trait for video games. The Genetic Terrain Program technique, based on
genetic programming, was used to automatically evolve Terrain Programs (TPs - which are able to generate terrains procedurally)
for the desired accessibility parameters. Results showed that the accessibility parameters have negligible influence on the
evolutionary system and that the terminal set has a major role on the terrain look. TPs produced this way are already being
used on Chapas video game.},
	author = {Frade, Miguel and Vega, Francisco and Cotta, Carlos},
	month = apr,
	year = {2010},
	doi = {10.1007/978-3-642-12239-2_10},
	note = {Pages: 99},
}

@inproceedings{togelius_towards_2010,
	address = {Monterey California},
	title = {Towards multiobjective procedural map generation},
	isbn = {978-1-4503-0023-0},
	url = {https://dl.acm.org/doi/10.1145/1814256.1814259},
	doi = {10.1145/1814256.1814259},
	language = {en},
	urldate = {2024-02-29},
	booktitle = {Proceedings of the 2010 {Workshop} on {Procedural} {Content} {Generation} in {Games}},
	publisher = {ACM},
	author = {Togelius, Julian and Preuss, Mike and Yannakakis, Georgios N.},
	month = jun,
	year = {2010},
	pages = {1--8},
}

@misc{nie_extend_2023,
	title = {Extend {Wave} {Function} {Collapse} to {Large}-{Scale} {Content} {Generation}},
	url = {http://arxiv.org/abs/2308.07307},
	abstract = {Wave Function Collapse (WFC) is a widely used tile-based algorithm in procedural content generation, including textures, objects, and scenes. However, the current WFC algorithm and related research lack the ability to generate commercialized large-scale or infinite content due to constraint conflict and time complexity costs. This paper proposes a Nested WFC (N-WFC) algorithm framework to reduce time complexity. To avoid conflict and backtracking problems, we offer a complete and sub-complete tileset preparation strategy, which requires only a small number of tiles to generate aperiodic and deterministic infinite content. We also introduce the weight-brush system that combines N-WFC and sub-complete tileset, proving its suitability for game design. Our contribution addresses WFC's challenge in massive content generation and provides a theoretical basis for implementing concrete games.},
	urldate = {2024-02-29},
	publisher = {arXiv},
	author = {Nie, Yuhe and Zheng, Shaoming and Zhuang, Zhan and Song, Xuan},
	month = aug,
	year = {2023},
	note = {arXiv:2308.07307 [cs]},
	keywords = {Computer Science - Artificial Intelligence},
}

@inproceedings{putra_procedural_2023,
	title = {Procedural {2D} {Dungeon} {Generation} {Using} {Binary} {Space} {Partition} {Algorithm} {And} {L}-{Systems}},
	url = {https://ieeexplore.ieee.org/abstract/document/10285811?casa_token=AqOEOrZSrVcAAAAA:6yIoKt83ax_sZpacoH4mIZul6PkW75bSVIekGqeMi0QZeKYlTYkbpNsBwAK7QsZT5EFz2g87XwI},
	doi = {10.1109/IC3INA60834.2023.10285811},
	abstract = {In game development, procedural method is a common method to reduce the high cost of content generation by artist. The idea of procedural content generation is to automate the generation content by developing a set of algoritmhs and rules based on the property of the content. Dungeon map generation plays a crucial role in creating immersive and challenging experiences in top-down roleplaying games (RPGs). This paper presents an approach to enhance dungeon map generation by combining the Binary Space Partition (BSP) algorithm and L-System that able to generate game-ready dungeon map. The proposed method uses BSP algorithm to perform an efficient space partition an L-System to generate diverse and visually appealing corridor between rooms. To validate the proposed system, we build a simple RPG game that employs our generator to generate a random dungeon network on each game session. The results shows that our method able to generate playable dungeon with a good level of playability.},
	urldate = {2024-02-29},
	booktitle = {2023 {International} {Conference} on {Computer}, {Control}, {Informatics} and its {Applications} ({IC3INA})},
	author = {Putra, Pratama Aditya and Tarigan, Jos Timanta and Zamzami, Elviawaty Muisa},
	month = oct,
	year = {2023},
	keywords = {Aerospace electronics, Computer Graphic, Costs, Digital control, Game Development, Games, Generators, Graphics, Partitioning algorithms, Procedural Content Generation},
	pages = {365--369},
}

@misc{van_muijden_gpu-based_2017,
	title = {{GPU}-based procedural placement in {Horizon} {Zero} {Dawn}},
	url = {https://www.youtube.com/watch?v=ToCozpl1sYY},
	author = {van Muijden, J},
	year = {2017},
	keywords = {Combining features, Terrain, Tiling, Vegetation},
}

@article{schneider_real-time_2006,
	title = {Real-{Time} {Editing}, {Synthesis}, and {Rendering} of {Inﬁnite} {Landscapes} on {GPUs}},
	abstract = {Recent advances in algorithms and graphics hardware have opened the possibility to render large terrain ﬁelds at interactive rates on commodity PCs. Due to these advances it is possible today to interactively synthesize artiﬁcial terrains using procedural descriptions. Our paper extends on this work by presenting a new GPU method for real-time editing, synthesis, and rendering of inﬁnite landscapes exhibiting a wide range of geological structures. Our method builds upon the concept of projected grids to achieve near-optimal sampling of the landscape. We describe the integration of procedural shaders for multifractals into this approach, and we propose intuitive options to edit the shape of the resulting terrain. The method is multi-scale and adaptive in nature, and it has been extended towards inﬁnite and spherical domains. In combination with geo-typical textures that automatically adapt to the shape being synthesized, a powerful method for the creation and rendering of realistic landscapes is presented.},
	language = {en},
	author = {Schneider, Jens and Boldte, Tobias and Westermann, Rudiger},
	year = {2006},
	keywords = {Terrain, Texturing},
}

@article{prusinkiewicz_fractal_1993,
	title = {A {Fractal} {Model} of {Mountains} with {Rivers}},
	abstract = {This paper addresses the long-standing problem of generating fractal mountains with rivers, and presents a partial solution that incorporates a squig-curve model of a river’s course into the midpoint-displacement model for mountains. The method is based on the observation that both models can be expressed by similar context-sensitive rewriting mechanisms. As a result, a mountain landscape with a river can be generated using a single integrated process.},
	language = {en},
	author = {Prusinkiewicz, Przemyslaw and Hammel, Mark},
	year = {1993},
}

@article{olsen_realtime_2004,
	title = {Realtime {Procedural} {Terrain} {Generation}},
	abstract = {The main goal of this paper is to provide an overview of a variety of methods for synthesis of eroded terrain for use in computer games, VR worlds and the like. Traditionally, such software uses either predeﬁned terrains or runtime generated data based on simple fractal noise techniques.},
	language = {en},
	author = {Olsen, Jacob},
	year = {2004},
	keywords = {Erosion, Framework, Physics-based, Terrain, Validation},
}

@article{lane_generating_2002,
	title = {Generating spatial distributions for multilevel models of plant communities},
	abstract = {The simulation and visualization of large groups of plants has many applications. The extreme visual complexity of the resulting scenes can be captured using multilevel models. For example, in two-level models, plant distributions may be determined using coarse plant representations, and realistic visualizations may be obtained by substituting detailed plant models for the coarse ones. In this paper, we focus on the coarse aspect of modeling, the speciﬁcation of plant distribution. We consider two classes of models: local-to-global models, rooted in the individual-based ecosystem simulations, and inverse, global-to-local models, in which positions of individual plants are inferred from a given distribution of plant densities. We extend previous results obtained using both classes of models with additional phenomena, including clustering and succession of plants. We also introduce the formalism of multiset L-systems to formalize the individual-based simulation models.},
	language = {en},
	author = {Lane, Brendan and Prusinkiewicz, Przemyslaw},
	year = {2002},
	keywords = {Ecosystem simulation, Vegetation distribution},
}

@article{haggstrom_real-time_2006,
	title = {Real-time generation and rendering of realistic landscapes},
	language = {en},
	author = {Häggström, Hans},
	year = {2006},
}

@article{benes_visual_2002,
	title = {Visual {Simulation} of {Hydraulic} {Erosion}},
	abstract = {A new algorithm for hydraulic terrain erosion is introduced. The main goal of the paper is to provide a technique which is inspired by physics and which allows for high level of control. We divided the erosion process into four independent steps that can be applied independently to achieve high level of realism. The erosion algorithm is based on the ability of water to dissolve material that is then transported to another locations. Because of the evaporation the sediment capacity of water volume is exceeded and the material is deposited. This kind of material transport signiﬁcantly inﬂuences the terrain morphology. The algorithm has wide area of applications; we describe here water sources, drying up the plashes, as well as ﬁctive rain on the surface of Mars.},
	language = {en},
	author = {Benes, Bedrich and Forsbach, Rafael},
	year = {2002},
}

@article{smith_answer_2011,
	title = {Answer {Set} {Programming} for {Procedural} {Content} {Generation}: {A} {Design} {Space} {Approach}},
	volume = {3},
	issn = {1943-0698},
	shorttitle = {Answer {Set} {Programming} for {Procedural} {Content} {Generation}},
	url = {https://ieeexplore.ieee.org/abstract/document/5783900?casa_token=Npx2j6lvT5UAAAAA:Jy6n4oXrT-JVFwTktxR0iZMzj55M8AaLjQq2ENWCtwoC-gFriOLGMbZE8fnrBs4J9rER4gIu0WY},
	doi = {10.1109/TCIAIG.2011.2158545},
	abstract = {Procedural content generators for games produce artifacts from a latent design space. This space is often only implicitly defined, an emergent result of the procedures used in the generator. In this paper, we outline an approach to content generation that centers on explicit description of the design space, using domain-independent procedures to produce artifacts from the described space. By concisely capturing a design space as an answer set program, we can rapidly define and expressively sculpt new generators for a variety of game content domains. We walk through the reimplementation of a reference evolutionary content generator in a tutorial example, and review existing applications of answer set programming to generative-content design problems in and outside of a game context.},
	number = {3},
	urldate = {2024-02-26},
	journal = {IEEE Transactions on Computational Intelligence and AI in Games},
	author = {Smith, Adam M. and Mateas, Michael},
	month = sep,
	year = {2011},
	note = {Conference Name: IEEE Transactions on Computational Intelligence and AI in Games},
	keywords = {Aerospace electronics, Algorithm design and analysis, Answer set programming, Concrete, Games, Generators, Programming, Syntactics, constraint programming, game design, logic programming, procedural content generation},
	pages = {187--200},
}

@article{summerville_expanding_2018,
	title = {Expanding {Expressive} {Range}: {Evaluation} {Methodologies} for {Procedural} {Content} {Generation}},
	volume = {14},
	copyright = {Copyright (c) 2018 Proceedings of the AAAI Conference on Artificial Intelligence and Interactive Digital Entertainment},
	issn = {2334-0924},
	shorttitle = {Expanding {Expressive} {Range}},
	url = {https://ojs.aaai.org/index.php/AIIDE/article/view/13012},
	doi = {10.1609/aiide.v14i1.13012},
	abstract = {Procedural Content Generation (PCG) has been a part of video games for the majority of their existence and have been an area of active research over the past decade. How- ever, despite the interest in PCG there is no commonly ac- cepted methodology for assessing and analyzing a generator. Furthermore, the recent trend towards machine learned PCG techniques commonly state the goal of learning the design within the original content, but there has been little assess- ment of whether these techniques actually achieve this goal. This paper presents a number of techniques for the assess- ment and analysis of PCG systems, allowing practitioners and researchers better insight into the strengths and weaknesses of these systems, allowing for better comparison of systems, and reducing the reliance on ad-hoc, cherry-picking-prone tech- niques.},
	language = {en},
	number = {1},
	urldate = {2024-02-26},
	journal = {Proceedings of the AAAI Conference on Artificial Intelligence and Interactive Digital Entertainment},
	author = {Summerville, Adam},
	month = sep,
	year = {2018},
	note = {Number: 1},
	keywords = {Procedural Content Generation},
	pages = {116--122},
}

@misc{ewin_by_nodate,
	title = {By {Christopher} {Ewin} - {Own} work, {CC} {BY}-{SA} 4.0, https://commons.wikimedia.org/w/index.php?curid=42510593},
	abstract = {Image displaying the Diamond-square algorithm},
	author = {Ewin, Christopher},
}

@misc{noauthor_diamond-square_2023,
	title = {Diamond-square algorithm},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=Diamond-square_algorithm&oldid=1181050351},
	abstract = {The diamond-square algorithm is a method for generating heightmaps for computer graphics. It is a slightly better algorithm than the three-dimensional implementation of the midpoint displacement algorithm, which produces two-dimensional landscapes.  It is also known as the random midpoint displacement fractal, the cloud fractal or the plasma fractal, because of the plasma effect produced when applied.
The idea was first introduced by Fournier, Fussell and Carpenter at SIGGRAPH in 1982.The diamond-square algorithm starts with a two-dimensional grid, then randomly generates terrain height from four seed values arranged in a grid of points so that the entire plane is covered in squares.},
	language = {en},
	urldate = {2023-12-21},
	journal = {Wikipedia},
	month = oct,
	year = {2023},
	note = {Page Version ID: 1181050351},
}

@misc{noauthor_minecraft_2023,
	title = {Minecraft},
	url = {https://www.minecraft.net},
	abstract = {Minecraft is een spel over blokken plaatsen en op avontuur gaan. Koop het hier, of bekijk de site voor het laatste nieuwe en de geweldige creaties van de gemeenschap!},
	language = {nl-NL},
	urldate = {2023-11-28},
	journal = {Minecraft.net},
	month = nov,
	year = {2023},
}

@misc{noauthor_growing_nodate,
	title = {Growing {Roots}},
	url = {https://growingroots.nl/},
	language = {nl-NL},
	urldate = {2023-11-16},
}

@article{mucina_biome_2019,
	title = {Biome: evolution of a crucial ecological and biogeographical concept},
	volume = {222},
	copyright = {© 2018 The Author. New Phytologist © 2018 New Phytologist Trust},
	issn = {1469-8137},
	shorttitle = {Biome},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1111/nph.15609},
	doi = {10.1111/nph.15609},
	abstract = {A biome is a key community ecological and biogeographical concept and, as such, has profited from the overall progress of community ecology, punctuated by two major innovations: shifting the focus from pure pattern description to understanding functionality, and changing the approach from observational to explanatory and, most importantly, from descriptive to predictive. The functional focus enabled development of mechanistic and function-focused predictive and retrodictive modelling; it also shaped the current understanding of the concept of a biome as a dynamic biological entity having many aspects, with deep roots in the evolutionary past, and which is undergoing change. The evolution of the biome concept was punctuated by three synthetic steps: the first synthesis formulated a solid body of theory explaining the ecological and biogeographical meaning of zonality and collated our knowledge on drivers of vegetation patterns at large spatial scales; the second translated this knowledge into effective mechanistic modelling tools, developing further the link between ecosystem functionality and biogeography; and the third (still in progress) is seeking common ground between large-scale ecological and biogeographic phenomena, using macroecology and macroevolutionary research tools.},
	language = {en},
	number = {1},
	urldate = {2023-12-18},
	journal = {New Phytologist},
	author = {Mucina, Ladislav},
	year = {2019},
	note = {\_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1111/nph.15609},
	keywords = {azonal biomes, biogeography, biome modelling, climate, evolution of biome, genomic tools, plant functional types, vegetation zonality},
	pages = {97--114},
}

@inproceedings{mech_visual_1996,
	address = {New York, NY, USA},
	series = {{SIGGRAPH} '96},
	title = {Visual models of plants interacting with their environment},
	isbn = {978-0-89791-746-9},
	url = {https://dl.acm.org/doi/10.1145/237170.237279},
	doi = {10.1145/237170.237279},
	urldate = {2023-12-15},
	booktitle = {Proceedings of the 23rd annual conference on {Computer} graphics and interactive techniques},
	publisher = {Association for Computing Machinery},
	author = {Měch, Radomír and Prusinkiewicz, Przemyslaw},
	month = aug,
	year = {1996},
	keywords = {L-system, clonal plant, ecosystem, modeling, plant development, realistic image synthesis, root, scientific visualization, simulation, software design, tree},
	pages = {397--410},
}

@inproceedings{huijser_procedural_2010,
	address = {Florianpolis, Santa Catarina, TBD, Brazil},
	title = {Procedural {Natural} {Systems} for {Game} {Level} {Design}},
	isbn = {978-1-61284-391-9},
	url = {http://ieeexplore.ieee.org/document/5772287/},
	doi = {10.1109/SBGAMES.2010.31},
	abstract = {Due to the increase in magnitude and level of detail of next-gen games, the time required to manually design a game level has increased dramatically. This paper introduces procedural natural systems, a novel approach aimed at reducing the time needed to design large-scale natural phenomena for game levels. The concept of natural systems separates the shape of a natural phenomenon from its footprint, allowing a designer to edit either of them separately. Various procedural techniques are used to combine the shape and footprint of a natural system, as well as to tweak these in real-time in a game world. We conclude that natural systems provide a solid foundation for intuitive, flexible and efficient procedural generation of significant portions of a game level.},
	language = {en},
	urldate = {2023-12-08},
	booktitle = {2010 {Brazilian} {Symposium} on {Games} and {Digital} {Entertainment}},
	publisher = {IEEE},
	author = {Huijser, Remco and Dobbe, Jeroen and Bronsvoort, Willem F. and Bidarra, Rafael},
	month = nov,
	year = {2010},
	keywords = {Combining features, Terrain, To read},
	pages = {189--198},
}

@article{cohen_wang_2003,
	title = {Wang {Tiles} for image and texture generation},
	volume = {22},
	issn = {0730-0301},
	url = {https://dl.acm.org/doi/10.1145/882262.882265},
	doi = {10.1145/882262.882265},
	abstract = {We present a simple stochastic system for non-periodically tiling the plane with a small set of Wang Tiles. The tiles may be filled with texture, patterns, or geometry that when assembled create a continuous representation. The primary advantage of using Wang Tiles is that once the tiles are filled, large expanses of non-periodic texture (or patterns or geometry) can be created as needed very efficiently at runtime.Wang Tiles are squares in which each edge is assigned a color. A valid tiling requires all shared edges between tiles to have matching colors. We present a new stochastic algorithm to non-periodically tile the plane with a small set of Wang Tiles at runtime.Furthermore, we present new methods to fill the tiles with 2D texture, 2D Poisson distributions, or 3D geometry to efficiently create at runtime as much non-periodic texture (or distributions, or geometry) as needed. We leverage previous texture synthesis work and adapt it to fill Wang Tiles. We demonstrate how to fill individual tiles with Poisson distributions that maintain their statistical properties when combined. These are used to generate a large arrangement of plants or other objects on a terrain. We show how such environments can be rendered efficiently by pre-lighting the individual Wang Tiles containing the geometry.We also extend the definition of Wang Tiles to include a coding of the tile corners to allow discrete objects to overlap more than one edge. The larger set of tiles provides increased degrees of freedom.},
	number = {3},
	urldate = {2023-12-12},
	journal = {ACM Transactions on Graphics},
	author = {Cohen, Michael F. and Shade, Jonathan and Hiller, Stefan and Deussen, Oliver},
	month = jul,
	year = {2003},
	keywords = {Poisson distributions, Wang Tiles, non-periodic tiling, texture synthesis},
	pages = {287--294},
}

@misc{muratori_color_2014,
	title = {The {Color} of {Noise}},
	url = {https://caseymuratori.com/blog_0010},
	abstract = {What kinds of random distributions are good for the sorts of graphics work we do in game development?},
	language = {en},
	urldate = {2023-12-11},
	journal = {The Color of Noise},
	author = {Muratori, Casey},
	month = may,
	year = {2014},
}

@misc{noauthor_nebraska_nodate,
	title = {The {Nebraska} {Problem}},
	url = {https://caseymuratori.com/blog_0011},
	abstract = {The search for a “random” distribution with the most favorable qualities for ground cover.},
	language = {en},
	urldate = {2023-12-11},
	journal = {The Nebraska Problem},
}

@inproceedings{kelley_terrain_1988,
	address = {New York, NY, USA},
	series = {{SIGGRAPH} '88},
	title = {Terrain simulation using a model of stream erosion},
	isbn = {978-0-89791-275-4},
	url = {https://dl.acm.org/doi/10.1145/54852.378519},
	doi = {10.1145/54852.378519},
	abstract = {The major process affecting the configuration and evolution of terrain is erosion by flowing water. Landscapes thus reflect the branching patterns of river and stream networks. The network patterns contain information that is characteristic of the landscape's topographic features. It is therefore possible to create an approximation to natural terrain by simulating the erosion of stream networks on an initially uneroded surface. Empirical models of stream erosion were used as a basis for the model presented here. Stream networks of various sizes and shapes are created by the model from a small number of initial parameters. The eroded surface is represented as a surface under tension, using the tension parameter to shape the profiles of valleys created by the stream networks. The model can be used to generate terrain databases for flight simulation and computer animation applications.},
	urldate = {2023-12-08},
	booktitle = {Proceedings of the 15th annual conference on {Computer} graphics and interactive techniques},
	publisher = {Association for Computing Machinery},
	author = {Kelley, Alex D. and Malin, Michael C. and Nielson, Gregory M.},
	month = jun,
	year = {1988},
	keywords = {database amplification, drainage network simulation, erosion models, structural models, surfaces under tension},
	pages = {263--268},
}

@article{dambrosio_cellular_2001,
	title = {A {Cellular} {Automata} model for soil erosion by water},
	volume = {26},
	issn = {14641909},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S1464190901850115},
	doi = {10.1016/S1464-1909(01)85011-5},
	abstract = {A Cellular Automata model for soil erosion by water, SCAVATU, was developed. It involves a larger number of states in comparison to the previous models: altitude, vegetation density, water depth, water run-up height, infiltration, outflow towards neighbouring cells, inflows, eroded material, sediment transport, deposited material, sediment transport fluxes.},
	language = {en},
	number = {1},
	urldate = {2023-12-04},
	journal = {Physics and Chemistry of the Earth, Part B: Hydrology, Oceans and Atmosphere},
	author = {D'Ambrosio, D. and Di Gregorio, S. and Gabriele, S. and Gaudio, R.},
	month = jan,
	year = {2001},
	pages = {33--39},
}

@inproceedings{miller_definition_1986,
	address = {New York, NY, USA},
	series = {{SIGGRAPH} '86},
	title = {The definition and rendering of terrain maps},
	isbn = {978-0-89791-196-2},
	url = {https://dl.acm.org/doi/10.1145/15922.15890},
	doi = {10.1145/15922.15890},
	abstract = {This paper examines three methods, two existing and one new, for the generation of fractals based on recursive subdivision. Both existing methods are found to have defects, which are not present in the new method. A parallel processing algorithm is proposed for the rendering of height fields which is exact and distributes the load evenly between the processors. A method is described for the 'fan-tracing' of height fields to allow the realistic simulation of water reflections.},
	urldate = {2023-12-04},
	booktitle = {Proceedings of the 13th annual conference on {Computer} graphics and interactive techniques},
	publisher = {Association for Computing Machinery},
	author = {Miller, Gavin S P},
	month = aug,
	year = {1986},
	pages = {39--48},
}

@article{freiknecht_survey_2017,
	title = {A {Survey} on the {Procedural} {Generation} of {Virtual} {Worlds}},
	volume = {1},
	copyright = {http://creativecommons.org/licenses/by/3.0/},
	issn = {2414-4088},
	url = {https://www.mdpi.com/2414-4088/1/4/27},
	doi = {10.3390/mti1040027},
	abstract = {This survey presents algorithms for the automatic generation of content for virtual worlds, in particular for games. After a definition of the term procedural content generation, the algorithms to generate realistic objects such as landscapes and vegetation, road networks, buildings, living beings and stories are introduced in detail. In our discussion, we emphasize a good compromise between the realism of the objects and the performance of the algorithms. The survey also assesses each generated object type in terms of its applicability in games and simulations of virtual worlds.},
	language = {en},
	number = {4},
	urldate = {2023-12-01},
	journal = {Multimodal Technologies and Interaction},
	author = {Freiknecht, Jonas and Effelsberg, Wolfgang},
	month = dec,
	year = {2017},
	note = {Number: 4
Publisher: Multidisciplinary Digital Publishing Institute},
	keywords = {multimedia content creation, procedural content generation, serious games, virtual worlds},
	pages = {27},
}

@phdthesis{dunn_procedural_2016,
	address = {San Luis Obispo, California},
	title = {Procedural {Generation} and {Rendering} of {Large}-{Scale} {Open}-{World} {Environments}},
	url = {https://digitalcommons.calpoly.edu/theses/1678},
	language = {en},
	urldate = {2023-12-01},
	school = {California Polytechnic State University},
	author = {Dunn, Ian Thomas},
	month = dec,
	year = {2016},
	doi = {10.15368/theses.2016.163},
}

@inproceedings{belhadj_modeling_2005,
	address = {New York, NY, USA},
	series = {{GRAPHITE} '05},
	title = {Modeling landscapes with ridges and rivers: bottom up approach},
	isbn = {978-1-59593-201-3},
	shorttitle = {Modeling landscapes with ridges and rivers},
	url = {https://dl.acm.org/doi/10.1145/1101389.1101479},
	doi = {10.1145/1101389.1101479},
	abstract = {We present a new fractal based method of generating realistic models of natural landscapes. In this paper, we describe a three-steps method that produces a terrain mesh using ridge lines and rivers drainage network. As opposed to previous methods that compute water erosion for a given terrain model --- Digital Elevation Map ---, our terrain mesh is generated constrained by a precomputed set of ridge lines and rivers network. A skeleton of a ridges and rivers network is computed and stored in a Digital Elevation Map (D.E.M.) as initial values. Then, the elevations data set is enriched using a novel interpolation method based on a Midpoint Displacement's Inverse process. Finally, a midpoint displacement subdivision is applied to interpolate the remaining elevation coordinates. The resulting terrain meshes lead to naturalistic landscape models and our method seems to be very promising. Images produced by our model are presented.},
	urldate = {2023-11-10},
	booktitle = {Proceedings of the 3rd international conference on {Computer} graphics and interactive techniques in {Australasia} and {South} {East} {Asia}},
	publisher = {Association for Computing Machinery},
	author = {Belhadj, Farès and Audibert, Pierre},
	month = nov,
	year = {2005},
	keywords = {Midpoint Displament, Rivers, Terrain},
	pages = {447--450},
}

@article{smelik_declarative_2011,
	series = {Virtual {Reality} in {Brazil}},
	title = {A declarative approach to procedural modeling of virtual worlds},
	volume = {35},
	issn = {0097-8493},
	url = {https://www.sciencedirect.com/science/article/pii/S0097849310001809},
	doi = {10.1016/j.cag.2010.11.011},
	abstract = {With the ever increasing costs of manual content creation for virtual worlds, the potential of creating it automatically becomes too attractive to ignore. However, for most designers, traditional procedural content generation methods are complex and unintuitive to use, hard to control, and generated results are not easily integrated into a complete and consistent virtual world. We introduce a novel declarative modeling approach that enables designers to concentrate on stating what they want to create instead of on describing how they should model it. It aims at reducing the complexity of virtual world modeling by combining the strengths of semantics-based modeling with manual and procedural approaches. This article describes two of its main contributions to procedural modeling of virtual worlds: interactive procedural sketching and virtual world consistency maintenance. We discuss how these techniques, integrated in our modeling framework SketchaWorld, build up to enable designers to create a complete 3D virtual world in minutes. Procedural sketching provides a fast and more intuitive way to model virtual worlds, by letting designers interactively sketch their virtual world using high-level terrain features, which are then procedurally expanded using a variety of integrated procedural methods. Consistency maintenance guarantees that the semantics of all terrain features is preserved throughout the modeling process. In particular, it automatically solves conflicts possibly emerging from interactions between terrain features. We believe that these contributions together represent a significant step towards providing more user control and flexibility in procedural modeling of virtual worlds. It can therefore be expected that by further reducing its complexity, virtual world modeling will become accessible to an increasingly broad group of users.},
	number = {2},
	urldate = {2023-11-08},
	journal = {Computers \& Graphics},
	author = {Smelik, R. M. and Tutenel, T. and de Kraker, K. J. and Bidarra, R.},
	month = apr,
	year = {2011},
	keywords = {Biomes, Combining features, Rivers, Terrain},
	pages = {352--363},
}

@article{kahoun_realtime_2013,
	title = {Realtime library for procedural generation and rendering of terrains},
	url = {https://dspace.cuni.cz/handle/20.500.11956/51668},
	abstract = {Techniky procedurálního generování grafického obsahu zažily za po-sledních třicet let širokého užití. Jedná se o stále aktivní oblast výzkumu s aplikacemi v 3D modelovacím software, videohrách a filmech. Tato práce se zaměřuje na algoritmy pro generování a zobrazování virtuálních terénů v reálném čase. Prezentujeme přehled dostupných metod a některé z nich poskytujeme v rámci rozšiřitelné knihovny pro syntézu procedurálních krajin. Powered by TCPDF (www.tcpdf.org)},
	language = {en\_US},
	urldate = {2023-11-08},
	author = {Kahoun, Martin},
	month = sep,
	year = {2013},
	note = {Accepted: 2017-05-15T13:04:09Z
Publisher: Univerzita Karlova, Matematicko-fyzikální fakulta},
	keywords = {Framework, Rivers, Terrain, Texturing, To read},
}

@inproceedings{teoh_riverland_2009,
	address = {Berlin, Heidelberg},
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {{RiverLand}: {An} {Efficient} {Procedural} {Modeling} {System} for {Creating} {Realistic}-{Looking} {Terrains}},
	isbn = {978-3-642-10331-5},
	shorttitle = {{RiverLand}},
	doi = {10.1007/978-3-642-10331-5_44},
	abstract = {Generating realistic-looking but interesting terrains quickly is a great challenge. We present RiverLand, an efficient system for terrain synthesis. RiverLand creates a realistic-looking terrain by first generating river networks over the land. Then, the terrain is created to be consistent with the river networks. In this way, the terrains created have a proper drainage basin, an important feature lacking in many existing procedural terrain methods. The terrains generated by RiverLand are also widely varied, with rolling hills, river valleys, alpine mountains, and rocky cliffs, all seamlessly connected in the same terrain. Since RiverLand does not use complex fluid simulations, it is fast, and yet is able to produce many of the erosion features generated by the simulation methods.},
	language = {en},
	booktitle = {Advances in {Visual} {Computing}},
	publisher = {Springer},
	author = {Teoh, Soon Tee},
	editor = {Bebis, George and Boyle, Richard and Parvin, Bahram and Koracin, Darko and Kuno, Yoshinori and Wang, Junxian and Wang, Jun-Xuan and Wang, Junxian and Pajarola, Renato and Lindstrom, Peter and Hinkenjann, André and Encarnação, Miguel L. and Silva, Cláudio T. and Coming, Daniel},
	year = {2009},
	keywords = {Maximal Cell, Medial Axis, River Network, Rocky Outcrop, Seed Point},
	pages = {468--479},
}

@article{gamito_procedural_2003,
	title = {Procedural {Landscapes} with {Overhangs}},
	abstract = {Overhangs have been a major stumbling block in the context of terrain synthesis models. These models resort invariably to a heightfield paradigm, which immediately precludes the existence of any type of overhang. This article presents a new technique for the generation of surfaces, with the ability to model overhangs in a procedural way. This technique can be used generally to model landscape elements, not only terrains but also the surface of the sea. The technique applies non-linear deformations to an initial heightfield surface. The deformations occur after the surface has been displaced along some specified vector field. The method is conceptually simple and enhances greatly the class of landscapes synthesized with procedural models.},
	author = {Gamito, Manuel and Musgrave, F.},
	month = dec,
	year = {2003},
}

@inproceedings{gibson_constrained_1998,
	address = {Berlin, Heidelberg},
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {Constrained elastic surface nets: {Generating} smooth surfaces from binary segmented data},
	isbn = {978-3-540-49563-5},
	shorttitle = {Constrained elastic surface nets},
	doi = {10.1007/BFb0056277},
	abstract = {This paper describes a method for creating object surfaces from binary-segmented data that are free from aliasing and terracing artifacts. In this method, a net of linked surface nodes is created over the surface of the binary object. The positions of the nodes are adjusted iteratively to reduce energy in the surface net while satisfying the constraint that each element in the surface net must remain within its original surface cube. This constraint ensures that fine detail such as cracks and thin protrusions that are present in the binary data are maintained.},
	language = {en},
	booktitle = {Medical {Image} {Computing} and {Computer}-{Assisted} {Intervention} — {MICCAI}’98},
	publisher = {Springer},
	author = {Gibson, Sarah F. F.},
	editor = {Wells, William M. and Colchester, Alan and Delp, Scott},
	year = {1998},
	keywords = {Binary Data, High Spatial Frequency, Marching Cube, Surgical Simulation, Volumetric Model},
	pages = {888--898},
}

@article{newman_survey_2006,
	title = {A survey of the marching cubes algorithm},
	volume = {30},
	issn = {0097-8493},
	url = {https://www.sciencedirect.com/science/article/pii/S0097849306001336},
	doi = {10.1016/j.cag.2006.07.021},
	abstract = {A survey of the development of the marching cubes algorithm [W. Lorensen, H. Cline, Marching cubes: a high resolution 3D surface construction algorithm. Computer Graphics 1987; 21(4):163–9], a well-known cell-by-cell method for extraction of isosurfaces from scalar volumetric data sets, is presented. The paper's primary aim is to survey the development of the algorithm and its computational properties, extensions, and limitations (including the attempts to resolve its limitations). A rich body of publications related to this aim are included. Representative applications and spin-off work are also considered and related techniques are briefly discussed.},
	number = {5},
	urldate = {2023-11-28},
	journal = {Computers \& Graphics},
	author = {Newman, Timothy S. and Yi, Hong},
	month = oct,
	year = {2006},
	keywords = {Indirect volume rendering, Isosurface extraction, Marching cubes, Scientific visualization, Volume visualization},
	pages = {854--879},
}

@article{gamito_procedural_2003-1,
	title = {Procedural {Landscapes} with {Overhangs}},
	abstract = {Overhangs have been a major stumbling block in the context of terrain synthesis models. These models resort invariably to a heightfield paradigm, which immediately precludes the existence of any type of overhang. This article presents a new technique for the generation of surfaces, with the ability to model overhangs in a procedural way. This technique can be used generally to model landscape elements, not only terrains but also the surface of the sea. The technique applies non-linear deformations to an initial heightfield surface. The deformations occur after the surface has been displaced along some specified vector field. The method is conceptually simple and enhances greatly the class of landscapes synthesized with procedural models.},
	author = {Gamito, Manuel and Musgrave, F.},
	month = dec,
	year = {2003},
}

@article{dey_procedural_2018,
	title = {Procedural feature generation for volumetric terrains using voxel grammars},
	volume = {27},
	issn = {18759521},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S1875952117301349},
	doi = {10.1016/j.entcom.2018.04.003},
	abstract = {Terrain generation is a fundamental requirement of many computer graphics simulations, including computer games, ﬂight simulators and environments in feature ﬁlms. There has been a considerable amount of research in this domain, which ranges between fully automated and semi-automated methods. Voxel representations of 3D terrains can create rich features that are not found in other forms of terrain generation techniques, such as caves and overhangs. In this article, we introduce a semi-automated method of generating features for volumetric terrains using a rule-based procedural generation system. Features are generated by selecting subsets of a voxel grid as input symbols to a grammar, composed of user-created operators. This results in overhangs and caves generated from a set of simple rules. The feature generation runs on the CPU and the GPU is utilised to extract a robust mesh from the volumetric dataset.},
	language = {en},
	urldate = {2023-11-28},
	journal = {Entertainment Computing},
	author = {Dey, Rahul and Doig, Jason G. and Gatzidis, Christos},
	month = aug,
	year = {2018},
	pages = {128--136},
}

@article{cui_voxel-based_2011,
	title = {A voxel-based octree construction approach for procedural cave generation},
	url = {https://ro.uow.edu.au/infopapers/3612},
	journal = {Faculty of Informatics - Papers (Archive)},
	author = {Cui, Juncheng and Chow, Yang-Wai and Zhang, Minjie},
	month = jan,
	year = {2011},
}

@article{musgrave_synthesis_1989,
	title = {The synthesis and rendering of eroded fractal terrains},
	volume = {23},
	issn = {0097-8930},
	url = {https://dl.acm.org/doi/10.1145/74334.74337},
	doi = {10.1145/74334.74337},
	abstract = {In standard fractal terrain models based on fractional Brownian motion the statistical character of the surface is, by design, the same everywhere. A new approach to the synthesis of fractal terrain height fields is presented which, in contrast to previous techniques, features locally independent control of the frequencies composing the surface, and thus local control of fractal dimension and other statistical characteristics. The new technique, termed noise synthesis, is intermediate in difficulty of implementation, between simple stochastic subdivision and Fourier filtering or generalized stochastic subdivision, and does not suffer the drawbacks of creases or periodicity. Varying the local crossover scale of fractal character or the fractal dimension with altitude or other functions yields more realistic first approximations to eroded landscapes. A simple physical erosion model is then suggested which simulates hydraulic and thermal erosion processes to create gloabl stream/valley networks and talus slopes. Finally, an efficient ray tracing algorithm for general height fields, of which most fractal terrains are a subset, is presented.},
	number = {3},
	urldate = {2023-11-08},
	journal = {ACM SIGGRAPH Computer Graphics},
	author = {Musgrave, F. K. and Kolb, C. E. and Mace, R. S.},
	month = jul,
	year = {1989},
	keywords = {Erosion, Fractal terrain},
	pages = {41--50},
}

@article{guerin_efficient_2016,
	title = {Efficient modeling of entangled details for natural scenes},
	volume = {35},
	copyright = {© 2016 The Author(s) Computer Graphics Forum © 2016 The Eurographics Association and John Wiley \& Sons Ltd. Published by John Wiley \& Sons Ltd.},
	issn = {1467-8659},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1111/cgf.13023},
	doi = {10.1111/cgf.13023},
	abstract = {Digital landscape realism often comes from the multitude of details that are hard to model such as fallen leaves, rock piles or entangled fallen branches. In this article, we present a method for augmenting natural scenes with a huge amount of details such as grass tufts, stones, leaves or twigs. Our approach takes advantage of the observation that those details can be approximated by replications of a few similar objects and therefore relies on mass-instancing. We propose an original structure, the Ghost Tile, that stores a huge number of overlapping candidate objects in a tile, along with a pre-computed collision graph. Details are created by traversing the scene with the Ghost Tile and generating instances according to user-defined density fields that allow to sculpt layers and piles of entangled objects while providing control over their density and distribution.},
	language = {en},
	number = {7},
	urldate = {2023-11-08},
	journal = {Computer Graphics Forum},
	author = {Guérin, Eric and Galin, Eric and Grosbellet, François and Peytavie, Adrien and Génevaux, Jean-David},
	year = {2016},
	note = {\_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1111/cgf.13023},
	keywords = {Clutter objects, Possibly out of scope},
	pages = {257--267},
}

@article{jiang_blue_2015,
	title = {Blue noise sampling using an {SPH}-based method},
	volume = {34},
	issn = {0730-0301},
	url = {https://dl.acm.org/doi/10.1145/2816795.2818102},
	doi = {10.1145/2816795.2818102},
	abstract = {We propose a novel algorithm for blue noise sampling inspired by the Smoothed Particle Hydrodynamics (SPH) method. SPH is a well-known method in fluid simulation -- it computes particle distributions to minimize the internal pressure variance. We found that this results in sample points (i.e., particles) with a high quality blue-noise spectrum. Inspired by this, we tailor the SPH method for blue noise sampling. Our method achieves fast sampling in general dimensions for both surfaces and volumes. By varying a single parameter our method can generate a variety of blue noise samples with different distribution properties, ranging from Lloyd's relaxation to Capacity Constrained Voronoi Tessellations (CCVT). Our method is fast and supports adaptive sampling and multi-class sampling. We have also performed experimental studies of the SPH kernel and its influence on the distribution properties of samples. We demonstrate with examples that our method can generate a variety of controllable blue noise sample patterns, suitable for applications such as image stippling and re-meshing.},
	number = {6},
	urldate = {2023-11-24},
	journal = {ACM Transactions on Graphics},
	author = {Jiang, Min and Zhou, Yahan and Wang, Rui and Southern, Richard and Zhang, Jian Jun},
	month = nov,
	year = {2015},
	keywords = {blue noise sampling, fourier spectrum, smoothed particle hydrodynamics, surface sampling},
	pages = {211:1--211:11},
}

@inproceedings{dietrich_terrain_2006,
	address = {Salt Lake City, UT, USA},
	title = {Terrain {Guided} {Multi}-{Level} {Instancing} of {Highly} {Complex} {Plant} {Populations}},
	isbn = {978-1-4244-0693-7},
	url = {http://ieeexplore.ieee.org/document/4061559/},
	doi = {10.1109/RT.2006.280228},
	abstract = {In this paper we demonstrate how todays ray tracing techniques can be applied to photo-realistically render extremely huge landscapes covered with trees and forests, where a user can freely choose between highly detailed close-up views or ﬂyover scenarios. This is made possible by mapping a number of square sub-scenes onto a huge polygonal terrain during run-time. The full plant population results from the combination of these tiles, which are iterated over the terrain. This will be demonstrated at the example of a highly complex, plant covered ecosystem containing trillions of triangles.},
	language = {en},
	urldate = {2023-11-24},
	booktitle = {2006 {IEEE} {Symposium} on {Interactive} {Ray} {Tracing}},
	publisher = {IEEE},
	author = {Dietrich, Andreas and Marmitt, Gerd and Slusallek, Philipp},
	month = sep,
	year = {2006},
	keywords = {Not useful, Raytracing},
	pages = {169--176},
}

@inproceedings{ong_terrain_2005,
	address = {New York, NY, USA},
	series = {{GECCO} '05},
	title = {Terrain generation using genetic algorithms},
	isbn = {978-1-59593-010-1},
	url = {https://dl.acm.org/doi/10.1145/1068009.1068241},
	doi = {10.1145/1068009.1068241},
	abstract = {We propose a method for applying genetic algorithms to create 3D terrain data sets. Existing procedural algorithms for generation of terrain have several shortcomings. The most popular approach, fractal-based terrain generation, is efficient, but is difficult for a user to control. Other methods tend to require too much user input. In this paper, we provide an alternative method of terrain generation that uses a two-pass genetic algorithm approach to produce a variety of terrain types using only intuitive user inputs. We allow a user to specify a rough sketch of terrain region boundaries, and we refine these boundaries using a genetic algorithm. We then couple this with a database of given terrain data to generate an artificial terrain, which we optimize using a second genetic algorithm.},
	urldate = {2023-11-08},
	booktitle = {Proceedings of the 7th annual conference on {Genetic} and evolutionary computation},
	publisher = {Association for Computing Machinery},
	author = {Ong, Teong Joo and Saunders, Ryan and Keyser, John and Leggett, John J.},
	month = jun,
	year = {2005},
	keywords = {Genetic programming, Terrain, Validation},
	pages = {1463--1470},
}

@inproceedings{deussen_realistic_1998,
	address = {New York, NY, USA},
	series = {{SIGGRAPH} '98},
	title = {Realistic modeling and rendering of plant ecosystems},
	isbn = {978-0-89791-999-9},
	url = {https://dl.acm.org/doi/10.1145/280814.280898},
	doi = {10.1145/280814.280898},
	urldate = {2023-11-08},
	booktitle = {Proceedings of the 25th annual conference on {Computer} graphics and interactive techniques},
	publisher = {Association for Computing Machinery},
	author = {Deussen, Oliver and Hanrahan, Pat and Lintermann, Bernd and Měch, Radomír and Pharr, Matt and Prusinkiewicz, Przemyslaw},
	month = jul,
	year = {1998},
	keywords = {Biomes, Ecosystem simulation, Framework, Grass, Terrain, Vegetation distribution},
	pages = {275--286},
}

@article{li_real-time_2021,
	title = {Real-time physically plausible simulation of forest},
	volume = {4},
	issn = {2666-6294},
	url = {https://www.sciencedirect.com/science/article/pii/S2666629421000085},
	doi = {10.1016/j.gvc.2021.200025},
	abstract = {In this paper, we propose a lookup table method to simulate a physically plausible large-scale forest animation. Our method is rooted in the FEM simulator to simulate plant deformation, and establish a table through pre-computed dynamic equation data. Based on this table, an efficient physical state similarity algorithm for traversing the table is proposed. Real-time search for the vertices displacement of the model from the table, and constantly update the current gesture of the model. The forest can react to the environment at an interactive rate by calculating the effects of random wind. Experiments show that our method can simulate a single tree with high efficiency, and can simulate a physically plausible forest with 500 trees at a frame rate of 34(fps).},
	urldate = {2023-11-08},
	journal = {Graphics and Visual Computing},
	author = {Li, Zhengze and Kuang, Fen and Zhang, Yanci},
	month = jun,
	year = {2021},
	keywords = {Not useful, Physics simulation},
	pages = {200025},
}

@inproceedings{hammes_modeling_2001,
	address = {Berlin, Heidelberg},
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {Modeling of {Ecosystems} as a {Data} {Source} for {Real}-{Time} {Terrain} {Rendering}},
	isbn = {978-3-540-44818-1},
	doi = {10.1007/3-540-44818-7_14},
	abstract = {With the advances in rendering hardware, it is possible to render very complex scenes in real-time. In general, computers do not have enough memory to store all the necessary information for sufficiently large areas. This paper discusses a way in which well-known techniques for modeling ecosystems can be applied to generate the placement of plants on a terrain automatically at runtime. Care was taken to pick algorithms that would be sufficiently fast to allow real-time computation, but also varied enough to allow for natural looking placement of plants and ecosystems while remaining deterministic. The techniques are discussed within a specific rendering framework, but can easily be adapted to other rendering engines.},
	language = {en},
	booktitle = {Digital {Earth} {Moving}},
	publisher = {Springer},
	author = {Hammes, Johan},
	editor = {Westort, Caroline Y.},
	year = {2001},
	keywords = {Biomes, Combining features, Level of detail, Terrain, Texturing, Vegetation},
	pages = {98--111},
}

@inproceedings{voulgaris_procedural_2021,
	title = {Procedural {Terrain} {Generation} {Using} {Generative} {Adversarial} {Networks}},
	url = {https://ieeexplore.ieee.org/abstract/document/9616151?casa_token=vFAfJUwWVjQAAAAA:-hG-4vhjb8RRDTefCV6CMEWo-3IwZWkn-3nE-2aUbfHxV82_ZCbgF-xJOOc8a6HHjhZ98nm_Qw},
	doi = {10.23919/EUSIPCO54536.2021.9616151},
	abstract = {Synthetic terrain realism is critical in VR applications based on computer graphics (e.g., games, simulations). Although fast procedural algorithms for automated terrain generation do exist, they still require human effort. This paper proposes a novel approach to procedural terrain generation, relying on Generative Adversarial Networks (GANs). The neural model is trained using terrestrial Points-of-Interest (PoIs, described by their geodesic coordinates/altitude) and publicly available corresponding satellite images. After training is complete, the GAN can be employed for deriving realistic terrain images on-the-fly, by merely forwarding through it a rough 2D scatter plot of desired PoIs in image form (so-called “altitude image”). We demonstrate that such a GAN is able to translate this rough, quickly produced sketch into an actual photorealistic terrain image. Additionally, we describe a strategy for enhancing the visual diversity of trained model synthetic output images, by tweaking input altitude image orientation during GAN training. Finally, we perform an objective and a subjective evaluation of the proposed method. Results validate the latter's ability to rapidly create life-like terrain images from minimal input data.},
	urldate = {2023-11-08},
	booktitle = {2021 29th {European} {Signal} {Processing} {Conference} ({EUSIPCO})},
	author = {Voulgaris, Georgios and Mademlis, Ioannis and Pitas, Ioannis},
	month = aug,
	year = {2021},
	note = {ISSN: 2076-1465},
	keywords = {Neural networks, Terrain},
	pages = {686--690},
}

@misc{newlands_procedural_2022,
	title = {Procedural {Generation} and {Rendering} of {Realistic}, {Navigable} {Forest} {Environments}: {An} {Open}-{Source} {Tool}},
	shorttitle = {Procedural {Generation} and {Rendering} of {Realistic}, {Navigable} {Forest} {Environments}},
	url = {http://arxiv.org/abs/2208.01471},
	doi = {10.48550/arXiv.2208.01471},
	abstract = {Simulation of forest environments has applications from entertainment and art creation to commercial and scientific modelling. Due to the unique features and lighting in forests, a forest-specific simulator is desirable, however many current forest simulators are proprietary or highly tailored to a particular application. Here we review several areas of procedural generation and rendering specific to forest generation, and utilise this to create a generalised, open-source tool for generating and rendering interactive, realistic forest scenes. The system uses specialised L-systems to generate trees which are distributed using an ecosystem simulation algorithm. The resulting scene is rendered using a deferred rendering pipeline, a Blinn-Phong lighting model with real-time leaf transparency and post-processing lighting effects. The result is a system that achieves a balance between high natural realism and visual appeal, suitable for tasks including training computer vision algorithms for autonomous robots and visual media generation.},
	urldate = {2023-11-08},
	publisher = {arXiv},
	author = {Newlands, Callum and Zauner, Klaus-Peter},
	month = aug,
	year = {2022},
	note = {arXiv:2208.01471 [cs]},
	keywords = {Combining features, Ecosystem simulation, Framework, Terrain, Vegetation, point of view},
}

@inproceedings{lechner_procedural_2003,
	title = {Procedural {City} {Modeling}},
	url = {https://www.semanticscholar.org/paper/Procedural-City-Modeling-Lechner-Watson/dc8a76e03a9139f24c2a4f03279d8a6980e86692},
	abstract = {We propose a method to procedurally generate a familiar yet complex human artifact: the city. We are not trying to reproduce existing cities, but to generate artificial cities that are convincing and plausible by capturing developmental behavior. In addition, our results are meant to build upon themselves, such that they ought to look compelling at any point along the transition from village to metropolis. Our approach largely focuses upon land usage and building distribution for creating realistic city environments, whereas previous attempts at city modeling have mainly focused on populating road networks. Finally, we want our model to be self automated to the point that the only necessary input is a terrain description, but other high-level and low-level parameters can be specified to support artistic contributions. With the aid of agent based simulation we are generating a system of agents and behaviors that interact with one another through their effects upon a simulated environment. Our philosophy is that as each agent follows a simple behavioral rule set, a more complex behavior will tend to emerge out of the interactions between the agents and their differing rule sets. By confining our model to a set of simple rules for each class of agents, we hope to make our model extendible not only in regard to the types of structures that are produced, but also in describing the social and cultural influences prevalent in all cities.},
	urldate = {2023-11-08},
	author = {Lechner, Thomas and Watson, Benjamin and Wilensky, U. and Felsen, M.},
	year = {2003},
	keywords = {Agents, Not useful},
}

@inproceedings{kamal_parametrically_2007,
	address = {New York, NY, USA},
	series = {{GRAPHITE} '07},
	title = {Parametrically controlled terrain generation},
	isbn = {978-1-59593-912-8},
	url = {https://dl.acm.org/doi/10.1145/1321261.1321264},
	doi = {10.1145/1321261.1321264},
	abstract = {In this paper, we propose a novel approach towards parametrically controlled artificial terrain generation. Our proposed method focuses on generation of terrains having mountains of prespecified height and spread of base region and peak nearly at a prespecified location. Means of performing advanced tuning on the terrain to produce unusual artifacts on the terrain is also demonstrated and how our algorithm performs better in comparison with the well known terrain generation algorithms when used to solve the same problem is observed.},
	urldate = {2023-11-08},
	booktitle = {Proceedings of the 5th international conference on {Computer} graphics and interactive techniques in {Australia} and {Southeast} {Asia}},
	publisher = {Association for Computing Machinery},
	author = {Kamal, K. Raiyan and Uddin, Yusuf Sarwar},
	month = dec,
	year = {2007},
	keywords = {Mountain, Terrain},
	pages = {17--23},
}

@inproceedings{frade_modelling_2008,
	address = {Berlin, Heidelberg},
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {Modelling {Video} {Games}’ {Landscapes} by {Means} of {Genetic} {Terrain} {Programming} - {A} {New} {Approach} for {Improving} {Users}’ {Experience}},
	isbn = {978-3-540-78761-7},
	doi = {10.1007/978-3-540-78761-7_52},
	abstract = {Terrain generation algorithms can provide a realistic scenario for video game experience and can help keep users interested in playing by providing new landscapes each time they play. Nowadays there are a wide range of techniques for terrain generation, but all of them are focused on providing realistic terrains. This paper proposes a new technique, Genetic Terrain Programming, based on evolutionary design with GP to allow game designers to evolve terrains according to their aesthetic feelings or desired features. The developed application produces Terrains Programs that will always generate different terrains, but consistently with the same features (e.g. valleys, lakes).},
	language = {en},
	booktitle = {Applications of {Evolutionary} {Computing}},
	publisher = {Springer},
	author = {Frade, Miguel and de Vega, F. Fernandez and Cotta, Carlos},
	editor = {Giacobini, Mario and Brabazon, Anthony and Cagnoni, Stefano and Di Caro, Gianni A. and Drechsler, Rolf and Ekárt, Anikó and Esparcia-Alcázar, Anna Isabel and Farooq, Muddassar and Fink, Andreas and McCormack, Jon and O’Neill, Michael and Romero, Juan and Rothlauf, Franz and Squillero, Giovanni and Uyar, A. Şima and Yang, Shengxiang},
	year = {2008},
	keywords = {Genetic programming, Terrain},
	pages = {485--490},
}

@inproceedings{alaka_hierarchical_2023,
	address = {New York, NY, USA},
	series = {{FDG} '23},
	title = {Hierarchical {Semantic} {Wave} {Function} {Collapse}},
	isbn = {978-1-4503-9855-8},
	url = {https://dl.acm.org/doi/10.1145/3582437.3587209},
	doi = {10.1145/3582437.3587209},
	abstract = {There are few proposals to improve the interactivity and control of wave function collapse (WFC) in a mixed-initiative setting. Moreover, most WFC algorithm variants operate on an simple, unstructured set of tiles. This limitation on the level of control provided to designers hampers their creative work in various ways. We propose Hierarchical Semantic WFC, a generalized approach to WFC that organizes its tile-set into a hierarchy akin to a taxonomy induced by the relation ‘consists-of’. In such a hierarchical structure, abstract tiles (i.e. non-leaf nodes) can represent the first sketchy intentions of a designer (e.g. forest, urban, desert,...) This allows a designer to interactively collapse a given area into abstract tiles, while subsequently, (and repeatedly, if desired) WFC can resolve each area into a variety of particular instances, by further collapsing it into (a valid combination of) its children tiles (whether leaves or not). We identify how this subtle tile-set change affects the whole WFC algorithm, describe a number of novel exploratory and interactive functions that this enables, and showcase these with a variety of examples generated with our prototype implementation. We conclude that these new mixed-initiative content generation methods can considerably reduce design iteration times and improve the assistance given to designers in expressing their creative intent.},
	urldate = {2023-11-08},
	booktitle = {Proceedings of the 18th {International} {Conference} on the {Foundations} of {Digital} {Games}},
	publisher = {Association for Computing Machinery},
	author = {Alaka, Shaad and Bidarra, Rafael},
	month = apr,
	year = {2023},
	keywords = {Background, Not useful},
	pages = {1--10},
}

@inproceedings{do_nascimento_gpu-based_2018,
	title = {{GPU}-{Based} {Real}-{Time} {Procedural} {Distribution} of {Vegetation} on {Large}-{Scale} {Virtual} {Terrains}},
	url = {https://ieeexplore.ieee.org/abstract/document/8636903?casa_token=IoZQcW6PpB8AAAAA:7gvMS7_v60kDTLNDIcNa3XBuwLQAengSbAZs2V2URLTRxSy4ayn6ibXbF2riyOd8N66va6BGnw},
	doi = {10.1109/SBGAMES.2018.00027},
	abstract = {We present a novel framework for real-time procedural distribution of vegetation, capable of handling large-scale terrains. Our approach considers several natural aspects that influence the adaptability of each plant type to topographic and environmental factors displayed across the terrain, as well as interactions between different plant types. The adaptability of each plant type is modeled through a set of consistent parameters that afford full control to the user over the final results of the distribution process. The proposed architecture relies on GPU parallelization and GPU instancing to improve performance. Our framework can be used to generate the vegetation cover of a terrain at runtime or to create an initial distribution that could latter be manually edited, expediting the process of decorating large environments. The results show that our framework can achieve natural looking vegetation distributions, while maintaining the computational costs compatible with realtime applications.},
	urldate = {2023-11-08},
	booktitle = {2018 17th {Brazilian} {Symposium} on {Computer} {Games} and {Digital} {Entertainment} ({SBGames})},
	author = {do Nascimento, Bruno Torres and Franzin, Flavio Paulus and Pozzer, Cesar Tadeu},
	month = oct,
	year = {2018},
	note = {ISSN: 2159-6662},
	keywords = {Combining features, Framework, Level of detail, Terrain, Vegetation},
	pages = {157--15709},
}

@article{weier_generating_2013,
	title = {Generating and {Rendering} {Large} {Scale} {Tiled} {Plant} {Populations}},
	volume = {10},
	language = {en},
	number = {1},
	author = {Weier, Martin},
	year = {2013},
	keywords = {Framework, Grass, Tiling, Vegetation},
}

@article{grosbellet_environmental_2016,
	title = {Environmental {Objects} for {Authoring} {Procedural} {Scenes}},
	volume = {35},
	copyright = {© 2015 The Authors Computer Graphics Forum © 2015 The Eurographics Association and John Wiley \& Sons Ltd.},
	issn = {1467-8659},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1111/cgf.12726},
	doi = {10.1111/cgf.12726},
	abstract = {We propose a novel approach for authoring large scenes with automatic enhancement of objects to create geometric decoration details such as snow cover, icicles, fallen leaves, grass tufts or even trash. We introduce environmental objects that extend an input object geometry with a set of procedural effects that defines how the object reacts to the environment, and by a set of scalar fields that defines the influence of the object over of the environment. The user controls the scene by modifying environmental variables, such as temperature or humidity fields. The scene definition is hierarchical: objects can be grouped and their behaviours can be set at each level of the hierarchy. Our per object definition allows us to optimize and accelerate the effects computation, which also enables us to generate large scenes with many geometric details at a very high level of detail. In our implementation, a complex urban scene of 10 000 m2, represented with details of less than 1 cm, can be locally modified and entirely regenerated in a few seconds.},
	number = {1},
	urldate = {2023-11-08},
	journal = {Computer Graphics Forum},
	author = {Grosbellet, Francois and Peytavie, Adrien and Guérin, Éric and Galin, Éric and Mérillou, Stéphane and Benes, Bedrich},
	year = {2016},
	note = {\_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1111/cgf.12726},
	keywords = {Clutter objects, Physics-based},
	pages = {296--308},
}

@article{jones_efficient_2006,
	title = {Efficient {Generation} of {Poisson}-{Disk} {Sampling} {Patterns}},
	volume = {11},
	issn = {1086-7651},
	url = {https://doi.org/10.1080/2151237X.2006.10129217},
	doi = {10.1080/2151237X.2006.10129217},
	abstract = {Poisson-disk sampling patterns are of interest to the graphics community because their blue-noise properties are desirable in sampling patterns for rendering, illumination, and other computations. Until now, such patterns could only be generated by slow methods with poor convergence, or could only be approximated by jittering individual samples or tiling sets of samples. We present a simple and efficient randomized algorithm for generating true Poissondisk sampling patterns in a square domain, given a minimum radius R between samples. The algorithm runs in O(N log N) time for a pattern of N points. The method is based on the Voronoi diagram. Source code is available online.},
	number = {2},
	urldate = {2023-11-08},
	journal = {Journal of Graphics Tools},
	author = {Jones, Thouis R.},
	month = jan,
	year = {2006},
	note = {Publisher: Taylor \& Francis
\_eprint: https://doi.org/10.1080/2151237X.2006.10129217},
	keywords = {Background, Sampling methods},
	pages = {27--36},
}

@article{peytavie_arches_2009,
	title = {Arches: a {Framework} for {Modeling} {Complex} {Terrains}},
	volume = {28},
	copyright = {© 2008 The Author(s) Journal compilation © 2008 The Eurographics Association and Blackwell Publishing Ltd.},
	issn = {1467-8659},
	shorttitle = {Arches},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1467-8659.2009.01385.x},
	doi = {10.1111/j.1467-8659.2009.01385.x},
	abstract = {In this paper, we present a framework for representing complex terrains with such features as overhangs, arches and caves and including different materials such as sand and rocks. Our hybrid model combines a volumetric discrete data structure that stores the different materials and an implicit representation for sculpting and reconstructing the surface of the terrain. Complex scenes can be edited and sculpted interactively with high level tools. We also propose an original rock generation technique that enables us to automatically generate complex rocky sceneries with piles of rocks without any computationally demanding physically-based simulation.},
	language = {en},
	number = {2},
	urldate = {2023-11-21},
	journal = {Computer Graphics Forum},
	author = {Peytavie, A. and Galin, E. and Grosjean, J. and Merillou, S.},
	year = {2009},
	note = {\_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1111/j.1467-8659.2009.01385.x},
	keywords = {To read},
	pages = {457--467},
}

@article{smelik_survey_2014,
	title = {A {Survey} on {Procedural} {Modelling} for {Virtual} {Worlds}},
	volume = {33},
	copyright = {© 2014 The Authors Computer Graphics Forum © 2014 The Eurographics Association and John Wiley \& Sons Ltd.},
	issn = {1467-8659},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1111/cgf.12276},
	doi = {10.1111/cgf.12276},
	abstract = {Procedural modelling deals with (semi-)automatic content generation by means of a program or procedure. Among other advantages, its data compression and the potential to generate a large variety of detailed content with reduced human intervention, have made procedural modelling attractive for creating virtual environments increasingly used in movies, games and simulations. We survey procedural methods that are useful to generate features of virtual worlds, including terrains, vegetation, rivers, roads, buildings and entire cities. In this survey, we focus particularly on the degree of intuitive control and of interactivity offered by each procedural method, because these properties are instrumental for their typical users: designers and artists. We identify the most promising research results that have been recently achieved, but we also realize that there is far from widespread acceptance of procedural methods among non-technical, creative professionals. We conclude by discussing some of the most important challenges of procedural modelling.},
	number = {6},
	urldate = {2023-11-08},
	journal = {Computer Graphics Forum},
	author = {Smelik, Ruben M. and Tutenel, Tim and Bidarra, Rafael and Benes, Bedrich},
	year = {2014},
	note = {\_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1111/cgf.12276},
	keywords = {General overview},
	pages = {31--50},
}

@book{skold_generating_2023,
	title = {Generating terrain features using software agents},
	url = {https://urn.kb.se/resolve?urn=urn:nbn:se:mau:diva-62688},
	abstract = {DiVA portal is a finding tool for research publications and student theses written at the following 50 universities and research institutions.},
	language = {eng},
	urldate = {2023-11-21},
	author = {Sköld, Marcus},
	year = {2023},
}

@article{doran_controlled_2010,
	title = {Controlled {Procedural} {Terrain} {Generation} {Using} {Software} {Agents}},
	volume = {2},
	issn = {1943-0698},
	url = {https://ieeexplore.ieee.org/abstract/document/5454273?casa_token=GPHytrYBv10AAAAA:etKTf-MqS36Xpc6fRwIksbRZ9ZpWJ68gTeFZAwrtKjoGYlA2ShUIT_mC-hFqX03nDag2fz4SGg},
	doi = {10.1109/TCIAIG.2010.2049020},
	abstract = {Procedural terrain generation is used to create landforms for applications such as computer games and flight simulators. While most of the existing work has concentrated on algorithms that generate terrain without input from the user, we explore a more controllable system that uses intelligent agents to generate terrain elevation heightmaps according to designer-defined constraints. This allows the designer to create procedural terrain that has specific properties.},
	number = {2},
	urldate = {2023-11-08},
	journal = {IEEE Transactions on Computational Intelligence and AI in Games},
	author = {Doran, Jonathon and Parberry, Ian},
	month = jun,
	year = {2010},
	note = {Conference Name: IEEE Transactions on Computational Intelligence and AI in Games},
	keywords = {Agents, Hills, Rivers, Terrain},
	pages = {111--119},
}

@misc{noauthor_design2connect_nodate,
	title = {{Design2Connect} - {TexTown} {Games}},
	url = {https://textowngames.nl/portfolio/design2connect/},
	abstract = {Eenzaamheid onder ouderen is een groeiend probleem met ernstige gevolgen voor de gezondheid en het welzijn. Eenzaamheid wordt niet alleen veroorzaakt door een},
	language = {en-US},
	urldate = {2023-11-16},
}

@inproceedings{ansari_model-based_2023,
	address = {Cham},
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {Model-based {Player} {Experience} {Testing} with {Emotion} {Pattern} {Verification}},
	isbn = {978-3-031-30826-0},
	doi = {10.1007/978-3-031-30826-0_9},
	abstract = {Player eXperience (PX) testing has attracted attention in the game industry as video games become more complex and widespread. Understanding players’ desires and their experience are key elements to guarantee the success of a game in the highly competitive market. Although a number of techniques have been introduced to measure the emotional aspect of the experience, automated testing of player experience still needs to be explored. This paper presents a framework for automated player experience testing by formulating emotion patterns’ requirements and utilizing a computational model of players’ emotions developed based on a psychological theory of emotions along with a model-based testing approach for test suite generation. We evaluate the strength of our framework by performing mutation test. The paper also evaluates the performance of a search-based generated test suite and LTL model checking-based test suite in revealing various variations of temporal and spatial emotion patterns. Results show the contribution of both algorithms in generating complementary test cases for revealing various emotions in different locations of a game level.},
	language = {en},
	booktitle = {Fundamental {Approaches} to {Software} {Engineering}},
	publisher = {Springer Nature Switzerland},
	author = {Ansari, Saba Gholizadeh and Prasetya, I. S. W. B. and Prandi, Davide and Kifetew, Fitsum Meshesha and Dastani, Mehdi and Dignum, Frank and Keller, Gabriele},
	editor = {Lambers, Leen and Uchitel, Sebastián},
	year = {2023},
	keywords = {agent-based testing, automated player experience testing, model-based testing, models of emotion},
	pages = {151--172},
}

@article{lee_fault_1985,
	title = {Fault {Tree} {Analysis}, {Methods}, and {Applications} ߝ {A} {Review}},
	volume = {R-34},
	issn = {1558-1721},
	url = {https://ieeexplore.ieee.org/abstract/document/5222114?casa_token=SH-0ZhySv7gAAAAA:NPmgpqpOLnECZimyXDF7Q3W1dNzwL2NTbxqjYbaNBVSYMIDn5tuFKYPhZEMcaToNcTP2TB5USA},
	doi = {10.1109/TR.1985.5222114},
	abstract = {This paper reviews and classifies fault-tree analysis methods developed since 1960 for system safety and reliability. Fault-tree analysis is a useful analytic tool for the reliability and safety of complex systems. The literature on fault-tree analysis is, for the most part, scattered through conference proceedings and company reports. We have classified the literature according to system definition, fault-tree construction, qualitative evaluation, quantitative evaluation, and available computer codes for fault-tree analysis.},
	number = {3},
	urldate = {2023-11-13},
	journal = {IEEE Transactions on Reliability},
	author = {Lee, W. S. and Grosh, D. L. and Tillman, F. A. and Lie, C. H.},
	month = aug,
	year = {1985},
	note = {Conference Name: IEEE Transactions on Reliability},
	pages = {194--203},
}

@article{van_muijden_gpu-based_2017-1,
	title = {{GPU}-based {Procedural} {Placement} in {Horizon} {Zero} {Dawn}},
	language = {en},
	author = {van Muijden, Jaap},
	year = {2017},
}

@article{van_muijden_gpu-based_2017-2,
	title = {{GPU}-based {Procedural} {Placement} in {Horizon} {Zero} {Dawn}},
	language = {en},
	author = {van Muijden, Jaap},
	year = {2017},
}

@phdthesis{antoniuk_procedural_2018,
	type = {thesis},
	title = {Procedural {Generation} of {Editable} {Three}-dimensional {Terrain} {Model} {Based} on {Selected} {Features} and {Two}-dimensional {Schematic} {Maps}},
	url = {https://repo.pw.edu.pl/info/phd/WUT06e3bd85a0b0403480365438ab965cff/},
	abstract = {Procedural content generation is a vast field, that includes many very different plications, form creation of single elements, to constructing extensive and complicated
environments. Created objects can be both two- and three-dimensional elements, for application in computer games, simulations or similar fields. Generation of content itself can in turn include both single models (like i.e. creating trees, rocks or other characteristic elements in a given environment) as well as generation of complex ecosystems with many internal dependencies (such as creation of various types of sites, generation and distribution of plant ecosystems, etc.). Based on publications from this field it can be found that type of used solution is mainly dependent from its intended purpose as well as expected quality of generated element. Created objects can differ both in level of detail and realism. Procedural terrain generation combines few issues such as creation of different areas, placing chosen elements across the scene as well as controlling correctness of received model. Depending on initial assumptions generation process can require different input data from user. Creating models for application i.e. in computer games, simulations or different visualizations, apart from such elements as appearance needs to take into account such issues as level of control over final terrain shape as well as providing easy way to introduce changes after generation process. Due to the characteristics of some of the challenges for example in computer games, it is also necessary to include such elements as overhangs, caves or associated features. Creation of such structures requires i.a. the use of space representation adapted to their specific layout. The presented work introduces algorithm for procedural generation of three-dimensional terrain model using schematic maps, with data representation allowing creation of such elements as underground systems. Thanks to the used input data sets, even a person not familiar with procedural terrain generation algorithms can easily define properties and layout of final terrain. These data also can represent complex dependencies (especially in case of underground areas, such as caves or structures created by humans). Due to the parameters used, the user always knows the maximum complexity of the object mesh and the generation itself works fast enough to significantly improve the work of 3D graphics. In addition, individual terrain fragments can be presented as three-dimensional objects i.e. in Blender application, and therefore allow simple way to introduce changes. It also facilitates further edition of models. The results of the developed approach can be used to generate terrain for application in computer games, simulations visualizations and similar areas, both when 6 creating terrain as a whole, as well as generating interchangeable components for use i.e. in level designing for computer games or as a base for further work.},
	language = {pl},
	urldate = {2023-11-08},
	school = {The Institute of Computer Science},
	author = {Antoniuk, Izabella},
	month = dec,
	year = {2018},
}

@misc{noauthor_gpu-based_nodate,
	title = {{GPU}-{Based} {Real}-{Time} {Procedural} {Distribution} of {Vegetation} on {Large}-{Scale} {Virtual} {Terrains} {\textbar} {IEEE} {Conference} {Publication} {\textbar} {IEEE} {Xplore}},
	url = {https://ieeexplore.ieee.org/abstract/document/8636903?casa_token=XyAXOCFyZzEAAAAA:fRSu1GbRj2zAkFy1zxgBk6GHkVskmhPHW9HZ4RiDPcE4S299RcOjzKN1rpquHgLLs6IJ386xnQ},
	urldate = {2023-11-08},
}

@misc{noauthor_realistic_nodate,
	title = {Realistic modeling and rendering of plant ecosystems {\textbar} {Proceedings} of the 25th annual conference on {Computer} graphics and interactive techniques},
	url = {https://dl.acm.org/doi/abs/10.1145/280814.280898},
	urldate = {2023-11-08},
}

@misc{noauthor_notitle_nodate,
}

@misc{noauthor_gpu-based_nodate-1,
	title = {{GPU}-{Based} {Real}-{Time} {Procedural} {Distribution} of {Vegetation} on {Large}-{Scale} {Virtual} {Terrains} {\textbar} {IEEE} {Conference} {Publication} {\textbar} {IEEE} {Xplore}},
	url = {https://ieeexplore.ieee.org/abstract/document/8636903?casa_token=XyAXOCFyZzEAAAAA:fRSu1GbRj2zAkFy1zxgBk6GHkVskmhPHW9HZ4RiDPcE4S299RcOjzKN1rpquHgLLs6IJ386xnQ},
	urldate = {2023-11-08},
}

@misc{noauthor_pub_nodate,
	title = {pub {H}-{BRS} {\textbar} {Generating} and {Rendering} {Large} {Scale} {Tiled} {Plant} {Populations}},
	url = {https://pub.h-brs.de/frontdoor/index/index/docId/1028},
	urldate = {2023-11-08},
}

@misc{noauthor_procedural_nodate,
	title = {Procedural {Terrain} {Generation} {Using} {Generative} {Adversarial} {Networks} {\textbar} {IEEE} {Conference} {Publication} {\textbar} {IEEE} {Xplore}},
	url = {https://ieeexplore.ieee.org/abstract/document/9616151?casa_token=vFAfJUwWVjQAAAAA:-hG-4vhjb8RRDTefCV6CMEWo-3IwZWkn-3nE-2aUbfHxV82_ZCbgF-xJOOc8a6HHjhZ98nm_Qw},
	urldate = {2023-11-08},
}

@misc{noauthor_terrain_nodate,
	title = {Terrain generation using genetic algorithms {\textbar} {Proceedings} of the 7th annual conference on {Genetic} and evolutionary computation},
	url = {https://dl.acm.org/doi/abs/10.1145/1068009.1068241},
	urldate = {2023-11-08},
}

@book{shaker_procedural_2016,
	address = {Cham},
	series = {Computational {Synthesis} and {Creative} {Systems}},
	title = {Procedural {Content} {Generation} in {Games}},
	isbn = {978-3-319-42714-0 978-3-319-42716-4},
	url = {http://link.springer.com/10.1007/978-3-319-42716-4},
	language = {en},
	urldate = {2023-11-08},
	publisher = {Springer International Publishing},
	author = {Shaker, Noor and Togelius, Julian and Nelson, Mark J.},
	year = {2016},
	doi = {10.1007/978-3-319-42716-4},
}
